From a7f8c6ccf39695f6736484b05681c1ea38d1c89e Mon Sep 17 00:00:00 2001
From: Quan Xu <quan.xu@intel.com>
Date: Tue, 5 Jul 2016 10:15:16 +0800
Subject: [PATCH 25/36] fix stubdom/vtpmmgr/{disk_io.h, disk_tpm.h}

Signed-off-by: Quan Xu <quan.xu@intel.com>
---
 stubdom/vtpmmgr/disk_io.h  |  6 ++----
 stubdom/vtpmmgr/disk_tpm.h | 31 ++++++++++++++++++++-----------
 2 files changed, 22 insertions(+), 15 deletions(-)

diff --git a/stubdom/vtpmmgr/disk_io.h b/stubdom/vtpmmgr/disk_io.h
index c0d35a5..9dd84f2 100644
--- a/stubdom/vtpmmgr/disk_io.h
+++ b/stubdom/vtpmmgr/disk_io.h
@@ -9,17 +9,15 @@ void disk_write_barrier(void);
 sector_t disk_find_free(const struct mem_tpm_mgr *mgr);
 void disk_flush_slot(const struct mem_tpm_mgr *mgr);
 void disk_set_used(sector_t loc, const struct mem_tpm_mgr *mgr);
-
 void disk_write_all(struct mem_tpm_mgr *mgr);
 
 static inline sector_t seal_loc(struct mem_tpm_mgr *mgr)
 {
-	return native_be32(mgr->active_root);
+    return native_be32(mgr->active_root);
 }
 
 static inline sector_t root_loc(struct mem_tpm_mgr *mgr)
 {
-	return native_be32(2 + mgr->active_root);
+    return native_be32(2 + mgr->active_root);
 }
-
 #endif
diff --git a/stubdom/vtpmmgr/disk_tpm.h b/stubdom/vtpmmgr/disk_tpm.h
index 57ae2a6..1df538f 100644
--- a/stubdom/vtpmmgr/disk_tpm.h
+++ b/stubdom/vtpmmgr/disk_tpm.h
@@ -7,23 +7,32 @@ void TPM_read_pcrs(void);
 void TPM_pcr_digest(struct hash160 *buf, le32_t selection);
 
 /* Sealing for key storage */
-int TPM_disk_seal(struct disk_seal_entry *dst, const void* src, size_t size);
-int TPM_disk_unseal(void *dst, size_t size, const struct disk_seal_entry *src);
+int TPM_disk_seal(struct disk_seal_entry *dst,
+                  const void* src, size_t size);
+int TPM_disk_unseal(void *dst, size_t size,
+                    const struct disk_seal_entry *src);
 
 /*TPM 2.0 Bind and Unbind */
-TPM_RC TPM2_disk_bind(struct disk_seal_entry *dst, void* src, unsigned int size);
-TPM_RC TPM2_disk_unbind(void *dst, unsigned int *size, const struct disk_seal_entry *src);
+TPM_RC TPM2_disk_bind(struct disk_seal_entry *dst,
+                      void* src, unsigned int size);
+TPM_RC TPM2_disk_unbind(void *dst, unsigned int *size,
+                        const struct disk_seal_entry *src);
 
 /* NVRAM to allow revocation of TM-KEY */
 int TPM_disk_nvalloc(be32_t *nvram_slot, struct tpm_authdata auth);
-int TPM_disk_nvread(void *buf, size_t bufsiz, be32_t nvram_slot, struct tpm_authdata auth);
-int TPM_disk_nvwrite(void *buf, size_t bufsiz, be32_t nvram_slot, struct tpm_authdata auth);
-int TPM_disk_nvchange(be32_t nvram_slot, struct tpm_authdata old, struct tpm_authdata noo);
+int TPM_disk_nvread(void *buf, size_t bufsiz, be32_t nvram_slot,
+                    struct tpm_authdata auth);
+int TPM_disk_nvwrite(void *buf, size_t bufsiz, be32_t nvram_slot,
+                     struct tpm_authdata auth);
+int TPM_disk_nvchange(be32_t nvram_slot, struct tpm_authdata old,
+                      struct tpm_authdata noo);
 
 /* Monotonic counters to detect rollback */
-int TPM_disk_alloc_counter(be32_t *slot, struct tpm_authdata auth, be32_t *value);
-int TPM_disk_check_counter(be32_t slot, struct tpm_authdata auth, be32_t value);
+int TPM_disk_alloc_counter(be32_t *slot, struct tpm_authdata auth,
+                           be32_t *value);
+int TPM_disk_check_counter(be32_t slot, struct tpm_authdata auth,
+                           be32_t value);
 int TPM_disk_incr_counter(be32_t slot, struct tpm_authdata auth);
-int TPM_disk_change_counter(be32_t slot, struct tpm_authdata old, struct tpm_authdata noo);
-
+int TPM_disk_change_counter(be32_t slot, struct tpm_authdata old,
+                            struct tpm_authdata noo);
 #endif
-- 
1.9.1

